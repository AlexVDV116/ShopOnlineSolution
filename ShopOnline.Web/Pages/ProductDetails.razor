@page "/ProductDetails/{Id:int}"
@using ShopOnline.Web.Services.Contracts


@if (Product == null && ErrorMessage == null)
{
    <DisplaySpinner/>
}
else if (ErrorMessage != null)
{
    <DisplayError ErrorMessage="@ErrorMessage"/>
}
else
{
    <h3 class="mb-5">Product details</h3>
    <div class="row">
        <div class="col-md-6 mb-4">
            <img class="img-fluid" src="@Product.ImageURL"/>
        </div>
        <div class="col-md-6">
            <h3>@Product.Name</h3>
            <p class="mb-4">@Product.Description</p>
            <p class="mb-4">
                <b>
                    @Product.Price.ToString("C")&nbsp;(@Product.Qty items in stock)
                </b>
            </p>
            <div>
                <button class="btn btn-success"
                        @onclick="() => (AddToCart_Click(new CartItemToAddDto { CartId = HardCoded.CartId, ProductId = Product.Id, Qty = 1 }))">
                    <b>Add to Cart</b>
                </button>
            </div>
        </div>
    </div>
}

@code
{

    [Parameter] public int Id { get; set; }

    [Inject] public IProductService ProductService { get; set; }
    [Inject] public IShoppingCartService ShoppingCartService { get; set; }
    [Inject] public NavigationManager NavigationManager { get; set; }
    public ProductDto Product { get; set; }
    public string ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Product = await ProductService.GetItem(Id);
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }

    protected async Task AddToCart_Click(CartItemToAddDto cartItemToAddDto)
    {
        try
        {
            var cartItemDto = await ShoppingCartService.AddItem(cartItemToAddDto);
            NavigationManager.NavigateTo("/ShoppingCart");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

}