@page "/"
@using ShopOnline.Web.Services.Contracts

@if (ProductDtos == null)
{
    <DisplaySpinner />
}
else
{
    <h3 class="mb-5">Products</h3>

    var productCount = ProductDtos.Count();

    @if (productCount > 0)
    {
        @foreach (var prodGroup in GetGroupedProductsByCategory())
        {
            <h4>@GetCategoryName(prodGroup)</h4>

            <div class="row mt-3">
                <DisplayProducts Products="@prodGroup.Take(4)"></DisplayProducts >
            </div>
            <hr class="mb-3"/>
        }
    }
}

@code
{
    [Inject]
    public IProductService ProductService { get; set; }

    public IEnumerable<ProductDto> ProductDtos { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ProductDtos = await ProductService.GetItems();
    }
    
    protected IOrderedEnumerable<IGrouping<int, ProductDto>> GetGroupedProductsByCategory()
    {
        return from product in ProductDtos
            group product by product.CategoryId
            into prodByCatGroup
            orderby prodByCatGroup.Key
            select prodByCatGroup;
    }

    protected string GetCategoryName(IGrouping<int, ProductDto> groupedProductDtos)
    {
        return groupedProductDtos.FirstOrDefault(pg => pg.CategoryId == groupedProductDtos.Key).CategoryName;
    }
}
